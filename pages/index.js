import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Monday from '../components/Monday'
import AllUsers from '../components/AllUsers'
import Dashboard from '../components/Dashboard'
import Tuesday from '../components/Tuesday'
import Wednesday from '../components/Wednesday'
import Thursday from '../components/Thursday'
import Friday from '../components/Friday'
import FetchMenu from './FetchMenu'
import datashared from "../usersData/SharedBrainly"
import datamicrosoft from "../usersData/Microsoft"
import datapandatron from "../usersData/Pandatron"


export default function Home({ data,data2,data3,data4,data5,dataBrainly,dataPandatron,dataMicrosoft,dataCulturedBrain}) {
  //const dataShared = datashared
  //const dataMicrosoft = datamicrosoft
  //const dataPandatron = datapandatron

  return (
    <div >
      <Head>
        <title>Nano Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Dashboard />
      <div>
        <div className='font-bold'>Notes</div>
        <div> Morning session ID: 6200d57014d1b95a4c82dc68</div>
        <div> Evening session ID: 61b65debfe32175adb317233</div>
        <div>Format time data. For example,  17:00 will be added as Evening hours: 17, Evening minutes: 0, (NOT 00)</div>
        <div > Team_id: FILL IN for <span className='font-bold text-xl'>Brainly, Cultured Brainly</span></div>

      </div>
      {/*  Banner */}
      <main className='space-y-5 mb-5'>
      <Monday data={data}/>
      <Tuesday data2={data2}/>
      <Wednesday data3={data3}/>
      <Thursday data4={data4}/>
      <Friday data5={data5}/>
      </main>
      <div className='border-t-2 py-2'>
      <FetchMenu dataMicrosoft={dataMicrosoft}  dataPandatron={dataPandatron} dataCulturedBrain={dataCulturedBrain} dataBrainly={dataBrainly}/>
      </div>

      
      
      {/*
            <AllUsers alldata={alldata}/>
      */}

    </div>
  )
}
export async function getServerSideProps(context) {
  const monday = await fetch('https://61vqrvqwn3.execute-api.us-east-1.amazonaws.com/staging2?day=Monday', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const data = await monday.json()
  if (!data) {
    return {
      notFound: true,
    }
  }
  const tuesday = await fetch('https://61vqrvqwn3.execute-api.us-east-1.amazonaws.com/staging2?day=Tuesday', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const data2 = await tuesday.json()
  if (!data2) {
    return {
      notFound: true,
    }
  }
  const wednesday = await fetch('https://61vqrvqwn3.execute-api.us-east-1.amazonaws.com/staging2?day=Wednesday', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const data3 = await wednesday.json()
  if (!data3) {
    return {
      notFound: true,
    }
  }
  const thursday = await fetch('https://61vqrvqwn3.execute-api.us-east-1.amazonaws.com/staging2?day=Thursday', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const data4 = await thursday.json()
  if (!data4) {
    return {
      notFound: true,
    }
  }
  const friday = await fetch('https://61vqrvqwn3.execute-api.us-east-1.amazonaws.com/staging2?day=Friday', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const data5 = await friday.json()
  if (!data5) {
    return {
      notFound: true,
    }
  }
  {/*
  const response = await fetch('https://www.fibofy.com/panda-sharedchannels/fetch-channel-users?channel=shared-brainly-2&bypass=cc4d9d62ad12bb29cce8663cffdaf6e9026961cc81b8dfcf10d4683087403180', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const dataShared = await response.json()
  if (!dataShared) {
    return {
      notFound: true,
    }
  }
  */}
  const response2 = await fetch('https://www.fibofy.com/panda-sharedchannels/fetch-channel-users?channel=pandacoachbot&bypass=cc4d9d62ad12bb29cce8663cffdaf6e9026961cc81b8dfcf10d4683087403180', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const dataPandatron = await response2.json()
  if (!dataPandatron) {
    return {
      notFound: true,
    }
  }
  const response3 = await fetch('https://www.fibofy.com/msteams-fibo/fetch-channel-users?channel=teams-bot&bypass=cc4d9d62ad12bb29cce8663cffdaf6e9026961cc81b8dfcf10d4683087403180', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const dataMicrosoft = await response3.json()
  if (!dataMicrosoft) {
    return {
      notFound: true,
    }
  }
  const response4 = await fetch('https://www.fibofy.com/panda-sharedchannels/fetch-channel-users?channel=culturedbrain&bypass=cc4d9d62ad12bb29cce8663cffdaf6e9026961cc81b8dfcf10d4683087403180', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const dataCulturedBrain = await response4.json()
  if (!dataCulturedBrain) {
    return {
      notFound: true,
    }
  }

  const response5 = await fetch('https://www.fibofy.com/panda-sharedchannels/fetch-channel-users?channel=brainly&bypass=cc4d9d62ad12bb29cce8663cffdaf6e9026961cc81b8dfcf10d4683087403180', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  const dataBrainly = await response5.json()
  if (!dataBrainly) {
    return {
      notFound: true,
    }
  }

 


  
  return {
    props: {
      data,data2,data3,data4,data5,dataPandatron,dataMicrosoft,dataCulturedBrain,dataBrainly
    }, // will be passed to the page component as props
  }
}





